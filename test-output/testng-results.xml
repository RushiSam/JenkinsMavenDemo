<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="19259" started-at="2020-01-29T12:19:35Z" finished-at="2020-01-29T12:19:54Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="19259" started-at="2020-01-29T12:19:35Z" finished-at="2020-01-29T12:19:54Z">
      <class name="testCases.TC001">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testCases.TC001@6a41eaa2]" name="setUp" is-config="true" duration-ms="216" started-at="2020-01-29T17:49:35Z" finished-at="2020-01-29T17:49:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="bf()[pri:0, instance:testCases.TC001@6a41eaa2]" name="bf" is-config="true" duration-ms="0" started-at="2020-01-29T17:49:35Z" finished-at="2020-01-29T17:49:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bf -->
        <test-method status="FAIL" signature="TC_0001()[pri:0, instance:testCases.TC001@6a41eaa2]" name="TC_0001" duration-ms="16106" started-at="2020-01-29T17:49:35Z" finished-at="2020-01-29T17:49:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at testCases.TC001.TC_0001(TC001.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0001 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.TC001@6a41eaa2]" name="getResult" is-config="true" duration-ms="997" started-at="2020-01-29T17:49:51Z" finished-at="2020-01-29T17:49:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0001 status=FAILURE method=TC001.TC_0001()[pri:0, instance:testCases.TC001@6a41eaa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testCases.TC001@6a41eaa2]" name="TearDown" is-config="true" duration-ms="2136" started-at="2020-01-29T17:49:52Z" finished-at="2020-01-29T17:49:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:testCases.TC001@6a41eaa2]" name="AfterTest" is-config="true" duration-ms="0" started-at="2020-01-29T17:49:54Z" finished-at="2020-01-29T17:49:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testCases.TC001@6a41eaa2]" name="tearDown" is-config="true" duration-ms="337" started-at="2020-01-29T17:49:55Z" finished-at="2020-01-29T17:49:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
